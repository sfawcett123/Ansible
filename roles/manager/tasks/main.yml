---
    - name: Create FSM Configuration Directory
      become: true
      ansible.builtin.file:
        path: "{{manager.web.directory}}"
        state: directory
        mode: 0775

    - name: Upload configuration
      become: true
      template:
        src: config.yaml.j2
        dest: "{{manager.web.directory}}/config.yaml"
        mode: 644
      notify:
          - Restart fsm

    - name: Upload WSGI
      become: true
      template:
        src: wsgi.py.j2
        dest: "{{manager.web.directory}}/wsgi.py"
        mode: 644

    - name: Install Server
      become: true
      ansible.builtin.pip:
        name: gunicorn
        state: latest
        virtualenv: "{{manager.web.directory}}/manager.venv"

    - name: Find latest Version
      ansible.builtin.uri:
         url: "{{manager.web.package}}"
         return_content: true
         body_format: json
      register: latest 
      
    - name: Get the Package URL
      set_fact:
         download_url: "{{ latest.json.assets | json_query( qz ) | first }}"
         package: "{{manager.web.directory}}/package.tar.gz"

      vars: 
        qz: "[?contains(name, 'manager' )].browser_download_url"

    - name: Download "{{download_url}}"
      get_url:
        url:  "{{download_url}}"
        dest: "{{package}}" 

    - name: Install "{{package}}"
      ansible.builtin.pip:
        name: "{{package}}" 
        state: latest
        virtualenv: "{{manager.web.directory}}/manager.venv"

#      notify:
#         - Restart fsm

#   - name: Install Flight Simulator Manager
#     become: true
#     ansible.builtin.pip:
#       name: "{{manager.web.package.name}}"
#       state: latest
#       extra_args: "{{manager.web.package.extra_args}}"
#       virtualenv: "{{manager.web.directory}}/manager.venv"
#     notify:
#         - Restart fsm

#   - name: Create Flight Simulator Service
#     become: true
#     template:
#       src: fsm.service.j2
#       dest: /lib/systemd/system/fsm.service
#       mode: 644
#     notify:
#         - Restart fsm

#   - name: Start FSM
#     service:
#       name: "{{manager.web.service.name}}"
#       state: started
#       enabled: yes
